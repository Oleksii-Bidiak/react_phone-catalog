{"version":3,"file":"static/js/218.fa63c058.chunk.js","mappings":"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","sources":["webpack://react_phone-catalog/./src/features/PagePartTop/ui/pagePartTop.module.scss?4cfa","features/PagePartTop/ui/PagePartTop.tsx","webpack://react_phone-catalog/./src/pages/CatalogPage/ui/ProductsPageFilter/productsPageFilter.module.scss?cff0","shared/lib/utils/getSearchWith.ts","pages/CatalogPage/model/services/initProductsPage.ts","pages/CatalogPage/ui/ProductsPageFilter/ProductsPageFilter.tsx","shared/lib/hooks/useDebounce.ts","pages/CatalogPage/model/selectors/getPreparedProductsList.ts","pages/CatalogPage/model/selectors/getProductsIsLoading.ts","pages/CatalogPage/model/selectors/getProductsCount.ts","pages/CatalogPage/model/selectors/getPagesCount.ts","pages/CatalogPage/model/selectors/getProductsError.ts","webpack://react_phone-catalog/./src/pages/CatalogPage/ui/ProductsPage/productPage.module.scss?e88c","pages/CatalogPage/ui/ProductsPage/ProductsPage.tsx","webpack://react_phone-catalog/./src/shared/ui/Section/ui/section.module.scss?0e71","shared/ui/Section/ui/Section.tsx","widgets/Header/model/types/header.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"breadcrumbs\":\"pagePartTop_breadcrumbs__opQQr\",\"breadcrumbs__link\":\"pagePartTop_breadcrumbs__link__N2v4g\",\"title\":\"pagePartTop_title__m6MOt\",\"label\":\"pagePartTop_label__AHrb1\",\"currentBreadcrumb\":\"pagePartTop_currentBreadcrumb__ZkMpa\",\"backButton\":\"pagePartTop_backButton__qC98z\"};","import { memo, useEffect, useMemo, useState } from 'react';\nimport { TitleTag, TitleTagType } from '../../../shared/ui/TitleTag';\nimport { Sceleton } from '../../../shared/ui/Sceleton/Sceleton';\nimport cls from './pagePartTop.module.scss';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { RoutePaths } from '../../../shared/config/routeConfig';\nimport icons from '../../../shared/styles/icons.module.scss';\nimport classNames from 'classnames';\nimport { capitalizeFirstLetter } from '../../../shared/lib/utils/capitalizeFirstLetter';\n\ninterface Props {\n  isLoading?: boolean;\n  isLoadingTitle?: boolean;\n  productsCount?: number;\n  title: string;\n  tag?: TitleTagType;\n  productName?: string; // Додаємо пропс для назви продукту\n}\n\nexport const PagePartTop = memo(\n  ({\n    title,\n    isLoadingTitle = false,\n    isLoading = false,\n    productsCount = 0,\n    tag = 'h1',\n    productName,\n  }: Props) => {\n    const { itemId } = useParams<{ itemId?: string }>();\n    const location = useLocation();\n    const navigate = useNavigate();\n    const [showBackButton, setShowBackButton] = useState<boolean>(false);\n\n    useEffect(() => {\n      const isFromLocation = location.state?.fromLocation !== undefined;\n\n      if (isFromLocation) {\n        setShowBackButton(true);\n      } else {\n        setShowBackButton(false);\n      }\n    }, [location]);\n\n    const handleBackClick = () => {\n      if (location.state?.fromLocation) {\n        navigate(location.state.fromLocation);\n      }\n    };\n\n    const breadcrumbs = useMemo(() => {\n      const locationParts = location.pathname.split('/');\n\n      return locationParts.map((pathPart, index) => {\n        const isLast = index === locationParts.length - 1;\n        const linkPath = `${locationParts.slice(0, index + 1).join('/')}`;\n\n        if (index === 0) {\n          return (\n            <Link\n              to={RoutePaths.home}\n              key={index}\n              className={classNames(cls.breadcrumbs__link, icons['_icon-home'])}\n            />\n          );\n        }\n\n        if (pathPart === 'products') {\n          return null;\n        }\n\n        if (isLast) {\n          return (\n            <span key={index} className={cls.currentBreadcrumb}>\n              {itemId\n                ? productName || 'Завантаження...'\n                : capitalizeFirstLetter(pathPart)}\n            </span>\n          );\n        }\n\n        return (\n          <Link to={linkPath} key={index} className={cls.breadcrumbs__link}>\n            {capitalizeFirstLetter(pathPart)}\n          </Link>\n        );\n      });\n    }, [itemId, location.pathname, productName]);\n\n    return (\n      <>\n        <nav className={cls.breadcrumbs}>{breadcrumbs.filter(Boolean)}</nav>\n        {showBackButton && (\n          <button\n            className={classNames(cls.backButton, icons['_icon-arrow'])}\n            onClick={handleBackClick}\n          >\n            Back\n          </button>\n        )}\n        {isLoadingTitle ? (\n          <Sceleton\n            height={tag === 'h1' ? 56 : 41}\n            width={'100%'}\n            className={cls.title}\n          />\n        ) : (\n          <TitleTag Tag={tag} title={title} className={cls.title} />\n        )}\n        {isLoading && <Sceleton height={21} width={'100%'} />}\n        {!isLoading && productsCount !== 0 && (\n          <p className={cls.label}>{`${productsCount} models`}</p>\n        )}\n      </>\n    );\n  },\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"filters\":\"productsPageFilter_filters__NUQYS\",\"sort\":\"productsPageFilter_sort__E0Yod\",\"pages\":\"productsPageFilter_pages__oeWOA\",\"search\":\"productsPageFilter_search__8CSKi\"};","export type SearchParams = {\n  [key: string]: string | null;\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(currentParams.toString());\n\n  Object.entries(paramsToUpdate).forEach(([key, value]) => {\n    if (value === null) {\n      newParams.delete(key);\n    } else {\n      newParams.set(key, value);\n    }\n  });\n\n  return newParams.toString();\n}\n","/* eslint-disable @typescript-eslint/indent */\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { ThunkConfig } from '../../../../app/providers/StoreProvider';\nimport {\n  ProductsSortField,\n  ProductsSortPerPage,\n} from '../../../../shared/const';\nimport { productPageSliceActions } from '../slice/productPageSlice';\n\ninterface InitProductsPageProps {\n  searchParams: URLSearchParams;\n}\n\nexport const initProductsPage = createAsyncThunk<\n  void,\n  InitProductsPageProps,\n  ThunkConfig<boolean>\n>('productsPage/initProductsPage', async ({ searchParams }, ThunkApi) => {\n  const { dispatch } = ThunkApi;\n\n  const sort = searchParams.get('sort');\n  const search = searchParams.get('search');\n  const perPage = searchParams.get('perPage');\n  const page = searchParams.get('page');\n\n  if (sort) {\n    dispatch(productPageSliceActions.setSort(sort as ProductsSortField));\n  }\n\n  if (page) {\n    dispatch(productPageSliceActions.setCurrentPage(+page));\n  }\n\n  if (perPage) {\n    dispatch(\n      productPageSliceActions.setPerPage(perPage as ProductsSortPerPage),\n    );\n  }\n\n  if (search) {\n    dispatch(productPageSliceActions.setSearch(search));\n  }\n});\n","/* eslint-disable @typescript-eslint/indent */\nimport { ChangeEvent, memo, useCallback, useEffect, useMemo } from 'react';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../../../shared/lib/hooks/reduxHooks';\nimport {\n  ProductsSortField,\n  ProductsSortPerPage,\n} from '../../../../shared/const';\nimport { productPageSliceActions } from '../../model/slice/productPageSlice';\nimport { getProductsSortField } from '../../model/selectors/getProductsSortField';\nimport cls from './productsPageFilter.module.scss';\nimport { capitalizeFirstLetter } from '../../../../shared/lib/utils/capitalizeFirstLetter';\nimport { getCountPerPage } from '../../model/selectors/getProductsPerPage';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../../../shared/lib/utils/getSearchWith';\nimport { getSearch } from '../../model/selectors/getSearch';\nimport { initProductsPage } from '../../model/services/initProductsPage';\nimport { useDebounce } from '../../../../shared/lib/hooks/useDebounce';\nimport { prepareProductsList } from '../../model/services/prepareProductsList';\nimport { CategoriesEnum } from '../../../../entities/Categories';\nimport { getCurrentPage } from '../../model/selectors/getCurrentPage';\nimport {\n  ICustopmSelectOption,\n  Input,\n  Select,\n} from '../../../../shared/ui/forms';\nimport classNames from 'classnames';\n\ninterface Props {\n  className?: string;\n}\n\nexport const ProductsPageFilter = memo((props: Props) => {\n  const { category } = useParams<{ category: string }>();\n  const { className } = props;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const dispatch = useAppDispatch();\n  const { setSort, setPerPage, setSearch, setCurrentPage } =\n    productPageSliceActions;\n  const sort = useAppSelector(getProductsSortField);\n  const perPage = useAppSelector(getCountPerPage);\n  const search = useAppSelector(getSearch);\n  const page = useAppSelector(getCurrentPage);\n\n  const fetchingData = useCallback(() => {\n    dispatch(prepareProductsList(category as CategoriesEnum));\n  }, [category, dispatch]);\n\n  const debouncedFetchData = useDebounce(fetchingData, 500);\n\n  const sortByOptions = useMemo<ICustopmSelectOption<ProductsSortField>[]>(\n    () =>\n      Object.values(ProductsSortField).map(key => ({\n        value: key,\n        label: capitalizeFirstLetter(key),\n      })),\n    [],\n  );\n\n  const sortByCountItems = useMemo<ICustopmSelectOption<ProductsSortPerPage>[]>(\n    () =>\n      Object.values(ProductsSortPerPage).map(key => ({\n        value: key,\n        label: capitalizeFirstLetter(key),\n      })),\n    [],\n  );\n\n  const onChangeSortField = useCallback(\n    (newSort: ProductsSortField) => {\n      dispatch(setSort(newSort));\n      dispatch(setCurrentPage(1));\n      setSearchParams(\n        getSearchWith(searchParams, {\n          sort: newSort !== ProductsSortField.NEWEST ? newSort : null,\n        }),\n      );\n      fetchingData();\n    },\n    [\n      dispatch,\n      fetchingData,\n      searchParams,\n      setCurrentPage,\n      setSearchParams,\n      setSort,\n    ],\n  );\n\n  const onChangePerPageCount = useCallback(\n    (newPerPage: ProductsSortPerPage) => {\n      dispatch(setPerPage(newPerPage));\n      dispatch(setCurrentPage(1));\n      setSearchParams(\n        getSearchWith(searchParams, {\n          perPage: newPerPage !== ProductsSortPerPage.ALL ? newPerPage : null,\n        }),\n      );\n      fetchingData();\n    },\n    [\n      dispatch,\n      setPerPage,\n      setCurrentPage,\n      setSearchParams,\n      searchParams,\n      fetchingData,\n    ],\n  );\n\n  const onChangeSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSearch(e.target.value.trim()));\n    dispatch(setCurrentPage(1));\n    setSearchParams(\n      getSearchWith(searchParams, {\n        search: search !== '' ? search : null,\n      }),\n    );\n    debouncedFetchData();\n  };\n\n  useEffect(() => {\n    setSearchParams(\n      getSearchWith(searchParams, {\n        sort: sort !== ProductsSortField.NEWEST ? sort : null,\n        perPage: perPage !== ProductsSortPerPage.ALL ? perPage : null,\n        search: search !== '' ? search : null,\n      }),\n    );\n  }, [perPage, search, searchParams, setSearchParams, sort]);\n\n  useEffect(() => {\n    dispatch(initProductsPage({ searchParams }));\n    setSearchParams(\n      getSearchWith(searchParams, {\n        sort: sort !== ProductsSortField.NEWEST ? sort : null,\n        perPage: perPage !== ProductsSortPerPage.ALL ? perPage : null,\n        search: search !== '' ? search : null,\n        page:\n          page !== 1\n            ? perPage !== ProductsSortPerPage.ALL\n              ? page.toString()\n              : null\n            : null,\n      }),\n    );\n    fetchingData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [category]);\n\n  return (\n    <div className={classNames(cls.filters, className)}>\n      <Select\n        className={`${cls.sort}`}\n        label={'Sort By'}\n        formElementId=\"sortBy\"\n        options={sortByOptions}\n        value={sort}\n        onChange={onChangeSortField}\n      />\n      <Select\n        className={`${cls.pages}`}\n        label={'Items on page'}\n        formElementId=\"itemsOnPage\"\n        options={sortByCountItems}\n        value={perPage}\n        onChange={onChangePerPageCount}\n      />\n      <Input\n        className={`${cls.search}`}\n        label=\"Search\"\n        search={search}\n        onChange={onChangeSearch}\n      />\n    </div>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { MutableRefObject, useCallback, useRef } from 'react';\n\nexport function useDebounce(callback: (...args: any[]) => void, delay: number) {\n  const timer = useRef() as MutableRefObject<any>;\n\n  return useCallback(\n    (...args: any[]) => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = setTimeout(() => {\n        callback(...args);\n      }, delay);\n    },\n    [callback, delay],\n  );\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getProductsPage } from './getProductsPage';\nimport { ProductPageSchema } from '../types/ProductPageSchema';\n\nexport const getPreparedProductsList = createSelector(\n  getProductsPage,\n  (productsPage: ProductPageSchema) => productsPage.preparedProducts || [],\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getProductsPage } from './getProductsPage';\nimport { ProductPageSchema } from '../types/ProductPageSchema';\n\nexport const getProductsIsLoading = createSelector(\n  getProductsPage,\n  (productsPage: ProductPageSchema) => productsPage.isloading,\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getProductsPage } from './getProductsPage';\nimport { ProductPageSchema } from '../types/ProductPageSchema';\n\nexport const getProductsCount = createSelector(\n  getProductsPage,\n  (productsPage: ProductPageSchema) => productsPage.productsCount,\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getProductsPage } from './getProductsPage';\nimport { ProductPageSchema } from '../types/ProductPageSchema';\n\nexport const getPagesCount = createSelector(\n  getProductsPage,\n  (productsPage: ProductPageSchema) => productsPage.pagesCount,\n);\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getProductsPage } from './getProductsPage';\nimport { ProductPageSchema } from '../types/ProductPageSchema';\n\nexport const getProductsError = createSelector(\n  getProductsPage,\n  (productsPage: ProductPageSchema) => productsPage.error,\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"productPage__filter\":\"productPage_productPage__filter__aWbeX\"};","import { useCallback } from 'react';\nimport { Navigate, useParams, useSearchParams } from 'react-router-dom';\nimport { ProductsPageFilter } from '../ProductsPageFilter/ProductsPageFilter';\nimport { getPreparedProductsList } from '../../model/selectors/getPreparedProductsList';\nimport { getProductsIsLoading } from '../../model/selectors/getProductsIsLoading';\nimport { prepareProductsList } from '../../model/services/prepareProductsList';\nimport { getProductsCount } from '../../model/selectors/getProductsCount';\nimport { productPageSliceActions } from '../../model/slice/productPageSlice';\nimport { getPagesCount } from '../../model/selectors/getPagesCount';\nimport { getCurrentPage } from '../../model/selectors/getCurrentPage';\nimport { ProductsList } from '../../../../entities/Product';\nimport { Section } from '../../../../shared/ui/Section';\nimport {\n  useAppDispatch,\n  useAppSelector,\n} from '../../../../shared/lib/hooks/reduxHooks';\nimport {\n  CategoriesEnum,\n  CategoriesEnumValues,\n} from '../../../../entities/Categories';\nimport { PagePartTop } from '../../../../features/PagePartTop';\nimport { getSearchWith } from '../../../../shared/lib/utils/getSearchWith';\nimport { TitlePagesEnum } from '../../../../widgets/Header/model/types/header';\nimport { RoutePaths } from '../../../../shared/config/routeConfig';\nimport { getProductsError } from '../../model/selectors/getProductsError';\nimport cls from './productPage.module.scss';\nimport { PageError } from '../../../../widgets/PageError';\nimport { TextBlock } from '../../../../shared/ui/TextBlock';\n\nconst ProductsPage = () => {\n  const { category } = useParams<{ category: string }>();\n  const dispatch = useAppDispatch();\n  const totalPages = useAppSelector(getPagesCount);\n  const { setCurrentPage } = productPageSliceActions;\n  const [searchParams, setSearchParams] = useSearchParams();\n  const products = useAppSelector(getPreparedProductsList);\n  const productsCount = useAppSelector(getProductsCount);\n  const isLoading = useAppSelector(getProductsIsLoading);\n  const currentPage = useAppSelector(getCurrentPage);\n  const error = useAppSelector(getProductsError);\n\n  const title = TitlePagesEnum[category as CategoriesEnum];\n\n  const onChangeCurrentPage = useCallback(\n    (page: number) => {\n      if (currentPage !== page) {\n        dispatch(setCurrentPage(page));\n        setSearchParams(\n          getSearchWith(searchParams, {\n            page: page !== 1 ? page.toString() : null,\n          }),\n        );\n\n        dispatch(prepareProductsList(category as CategoriesEnum));\n      }\n    },\n    [\n      category,\n      currentPage,\n      dispatch,\n      searchParams,\n      setCurrentPage,\n      setSearchParams,\n    ],\n  );\n\n  const isValidCategory = Object.values(CategoriesEnumValues).includes(\n    category as CategoriesEnum,\n  );\n\n  if (!isValidCategory) {\n    return <Navigate to={RoutePaths.not_found} replace />;\n  }\n\n  return (\n    <>\n      <Section firstSection lastSection>\n        <PagePartTop\n          isLoading={isLoading}\n          productsCount={productsCount}\n          title={title}\n        />\n        {!error && isValidCategory ? (\n          <>\n            <ProductsPageFilter className={cls.productPage__filter} />\n            {products.length > 1 ? (\n              <ProductsList\n                products={products}\n                isLoading={isLoading}\n                totalPages={totalPages}\n                onChangeCurrentPage={onChangeCurrentPage}\n                currentPage={currentPage}\n              />\n            ) : (\n              <TextBlock text={`There are no ${category} yet`} />\n            )}\n          </>\n        ) : (\n          <PageError />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default ProductsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"standartSection\":\"section_standartSection__QZBN0\",\"firstSection\":\"section_firstSection__fmPZ6\",\"padding-bottom\":\"section_padding-bottom__s7C6U\"};","/* eslint-disable react/display-name */\nimport { ReactNode } from 'react';\nimport cls from './section.module.scss';\nimport classNames from 'classnames';\nimport { Container } from '../../Container';\n\ninterface Props {\n  className?: string;\n  children: ReactNode;\n  firstSection?: boolean;\n  lastSection?: boolean;\n}\n\nexport const Section = ({\n  children,\n  className,\n  firstSection,\n  lastSection = false,\n}: Props) => {\n  return (\n    <section\n      className={classNames(className, cls.standartSection, {\n        [cls.firstSection]: firstSection,\n        [cls['padding-bottom']]: lastSection,\n      })}\n    >\n      <Container>{children}</Container>\n    </section>\n  );\n};\n","import { ReactNode } from 'react';\nimport { CategoriesEnum } from '../../../../entities/Categories';\n\ntype TitleKey =\n  | 'home'\n  | 'phones'\n  | 'tablets'\n  | 'accessories'\n  | 'favorites'\n  | 'cart';\n\nexport const TitlePagesEnum: Record<TitleKey | CategoriesEnum, string> = {\n  home: 'Welcome to Nice Gadgets store!',\n  phones: 'Mobile phones',\n  tablets: 'Tablets',\n  accessories: 'Accessories',\n  favorites: 'Favorites',\n  cart: 'Cart',\n};\n\nexport interface HeaderItemType {\n  path: string;\n  children: string | ReactNode;\n  isIcon?: boolean;\n}\n"],"names":["PagePartTop","memo","_ref","title","isLoadingTitle","isLoading","productsCount","tag","productName","itemId","useParams","location","useLocation","navigate","useNavigate","showBackButton","setShowBackButton","useState","useEffect","_location$state","isFromLocation","undefined","state","fromLocation","breadcrumbs","useMemo","locationParts","pathname","split","map","pathPart","index","isLast","length","linkPath","concat","slice","join","_jsx","Link","to","RoutePaths","home","className","classNames","cls","icons","children","capitalizeFirstLetter","_jsxs","_Fragment","filter","Boolean","onClick","handleBackClick","_location$state2","Sceleton","height","width","TitleTag","Tag","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","set","initProductsPage","createAsyncThunk","async","ThunkApi","searchParams","dispatch","sort","get","search","perPage","page","productPageSliceActions","setSort","setCurrentPage","setPerPage","setSearch","ProductsPageFilter","props","category","setSearchParams","useSearchParams","useAppDispatch","useAppSelector","getProductsSortField","getCountPerPage","getSearch","getCurrentPage","fetchingData","useCallback","prepareProductsList","debouncedFetchData","callback","delay","timer","useRef","_len","arguments","args","Array","_key","current","clearTimeout","setTimeout","useDebounce","sortByOptions","values","ProductsSortField","label","sortByCountItems","ProductsSortPerPage","onChangeSortField","newSort","NEWEST","onChangePerPageCount","newPerPage","ALL","Select","formElementId","options","onChange","Input","e","target","trim","getPreparedProductsList","createSelector","getProductsPage","productsPage","preparedProducts","getProductsIsLoading","isloading","getProductsCount","getPagesCount","pagesCount","getProductsError","error","ProductsPage","totalPages","products","currentPage","TitlePagesEnum","onChangeCurrentPage","isValidCategory","CategoriesEnumValues","includes","Section","firstSection","lastSection","ProductsList","TextBlock","text","PageError","Navigate","not_found","replace","Container","phones","tablets","accessories","favorites","cart"],"sourceRoot":""}